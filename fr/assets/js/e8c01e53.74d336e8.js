(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1545],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return m}});var s=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,s,a=function(e,n){if(null==e)return{};var t,s,a={},r=Object.keys(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=s.createContext({}),c=function(e){var n=s.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return s.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},p=s.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(t),m=a,v=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return t?s.createElement(v,o(o({ref:n},u),{},{components:t})):s.createElement(v,o({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<r;c++)o[c]=t[c];return s.createElement.apply(null,o)}return s.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7101:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var s=t(2122),a=t(9756),r=(t(7294),t(3905)),o=["components"],i={sidebar_position:2},l="Notions de base sur les interactions des contrats intelligents",c={unversionedId:"smart-contract-interaction/interact",id:"smart-contract-interaction/interact",isDocsHomePage:!1,title:"Notions de base sur les interactions des contrats intelligents",description:"Comme indiqu\xe9 pr\xe9c\xe9demment, les contrats intelligents sont des codes ex\xe9cutables. Dans les prochaines le\xe7ons, nous apprendrons \xe0 en \xe9crire un. En attendant, il est pr\xe9f\xe9rable d'utiliser ce qui est d\xe9j\xe0 \xe9crit pour garder les choses simples. Nous allons plonger dans deux options pour d\xe9ployer et interagir avec les contrats : wasmd et CosmJS.",source:"@site/i18n/fr/docusaurus-plugin-content-docs-dev-academy/current/smart-contract-interaction/02-interact.md",sourceDirName:"smart-contract-interaction",slug:"/smart-contract-interaction/interact",permalink:"/fr/dev-academy/smart-contract-interaction/interact",editUrl:"https://crowdin.com/project/cosmwasm-docs/fr",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"devAcademy",previous:{title:"Que sont les contrats intelligents ?",permalink:"/fr/dev-academy/smart-contract-interaction/what-is-smart-contracts"},next:{title:"D\xe9fi",permalink:"/fr/dev-academy/smart-contract-interaction/challenge"}},u=[{value:"O\xf9 trouver des contrats intelligents ?",id:"o\xf9-trouver-des-contrats-intelligents-",children:[]},{value:"T\xe9l\xe9charger",id:"t\xe9l\xe9charger",children:[]},{value:"wasmd",id:"wasmd",children:[{value:"Store (base de donn\xe9es)",id:"store-base-de-donn\xe9es",children:[]},{value:"Instantiate",id:"instantiate",children:[]}]},{value:"CosmJS",id:"cosmjs",children:[{value:"Configuration du client",id:"configuration-du-client",children:[]},{value:"Recharger son portefeuille",id:"reloading-your-wallet",children:[]}]}],d={toc:u};function p(e){var n=e.components,t=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,s.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"notions-de-base-sur-les-interactions-des-contrats-intelligents"},"Notions de base sur les interactions des contrats intelligents"),(0,r.kt)("p",null,"Comme indiqu\xe9 pr\xe9c\xe9demment, les contrats intelligents sont des codes ex\xe9cutables. Dans les prochaines le\xe7ons, nous apprendrons \xe0 en \xe9crire un. En attendant, il est pr\xe9f\xe9rable d'utiliser ce qui est d\xe9j\xe0 \xe9crit pour garder les choses simples. Nous allons plonger dans deux options pour d\xe9ployer et interagir avec les contrats : ",(0,r.kt)("inlineCode",{parentName:"p"},"wasmd")," et ",(0,r.kt)("inlineCode",{parentName:"p"},"CosmJS"),"."),(0,r.kt)("h2",{id:"o\xf9-trouver-des-contrats-intelligents-"},"O\xf9 trouver des contrats intelligents ?"),(0,r.kt)("p",null,"Normalement, nous compilons les contrats intelligents en utilisant des compilateurs rust puis des optimiseurs de code. Maintenant, nous allons simplement t\xe9l\xe9charger une version pr\xe9compil\xe9e par l'\xe9quipe cosmwasm."),(0,r.kt)("h2",{id:"t\xe9l\xe9charger"},"T\xe9l\xe9charger"),(0,r.kt)("p",null,"Nous fournissons l'ex\xe9cutable binaire de smart contract \xe0 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/cw-plus/"},"cw-plus")," repo \xe0 c\xf4t\xe9 du code. Le r\xe9f\xe9rentiel cw-plus est une collection de contrats intelligents de qualit\xe9 production qui a \xe9t\xe9 largement test\xe9e sur des r\xe9seaux r\xe9els. Vous verrez une liste des contrats disponibles sur la page du r\xe9f\xe9rentiel. Allez cliquer sur le bouton ",(0,r.kt)("strong",{parentName:"p"},"Releases")," pour voir les ex\xe9cutables binaires \xe9tiquet\xe9s. Vous pouvez t\xe9l\xe9charger des binaires et les d\xe9ployer sur les blockchains compatibles."),(0,r.kt)("p",null,"Nous utiliserons le binaire pr\xe9compil\xe9 cw20 pour ce cours : ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/CosmWasm/cw-plus/releases/download/v0.8.0/cw20_base.wasm"},"cw20-base")),(0,r.kt)("p",null,"Ne pr\xeatez pas attention aux d\xe9tails de la base cw20 pour le moment, concentrez-vous sur l'obtention d'un contrat sur un testnet."),(0,r.kt)("h2",{id:"wasmd"},"wasmd"),(0,r.kt)("h3",{id:"store-base-de-donn\xe9es"},"Store (base de donn\xe9es)"),(0,r.kt)("p",null,"Nous allons d\xe9ployer le code en utilisant ",(0,r.kt)("inlineCode",{parentName:"p"},"wasmd")," CLI que nous avons install\xe9 plus t\xf4t."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"curl -LJO https://github.com/CosmWasm/cw-plus/releases/download/v0.8.0/cw20_base.wasm\nRES=$(wasmd tx wasm store cw20_base.wasm --from wallet $TXFLAG -y)\n\n# obtenir l'identifiant du code\nCODE_ID=$(echo $RES | jq -r '.logs[0].events[1].attributes[0].value')\n\n# imprimer l'identifiant du code\necho $CODE_ID\n\n# pas encore de contrat, ceci devrait retourner une liste vide\nwasmd query wasm list-contract-by-code $CODE_ID $NODE --output json\n\n")),(0,r.kt)("p",null,"Maintenant le code stock\xe9 sur le r\xe9seau. ",(0,r.kt)("inlineCode",{parentName:"p"},"CODE_ID")," est l'identifiant du code."),(0,r.kt)("h3",{id:"instantiate"},"Instantiate"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Code du contrat intelligent != instance de contrat intelligent utilisable")),(0,r.kt)("p",null,"Le code d'un contrat intelligent n'est qu'un plan d'un contrat intelligent. Nous ",(0,r.kt)("em",{parentName:"p"},"instan\xe7ons")," un contrat intelligent bas\xe9 sur le code du contrat intelligent ."),(0,r.kt)("p",null,"Voici le message d'instanciation :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Golden Stars",\n  "symbol": "STAR",\n  "decimals": "2",\n  "initial_balances": [\n    {"address": "wasm1ez03me7uljk7qerswdp935vlaa4dlu48mys3mq", "amount": "10000"},\n    {"address": "wasm1tx7ga0lsnumd5hfsh2py0404sztnshwqaqjwy8", "amount": "10000"},\n    {"address": "wasm1mvjtezrn8dpateu0435trlw5062qy76gf738n0", "amount": "10000"}\n  ],\n  "mint": {\n    "minter": "wasm1mvjtezrn8dpateu0435trlw5062qy76gf738n0"\n  }\n}\n')),(0,r.kt)("p",null,"Ce message contient l'\xe9tat initial du contrat."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'INIT=$(jq -n --arg wallet $(wasmd keys show -a wallet) \'{"name" : "Golden Stars", "symbol" : "STAR", "decimals":2, "initial_balances" :[{"address" :"wasm1n8aqd9jq9glhj87cn0nkmd5mslz3df8zm86hrh", "amount" : "10000"},{"address" : "wasm13y4tpsgxza44yq76qvj69sakq4jmeyqudwgwpk", "amount" : "10000"},{"address" :$wallet, "amount" : "10000"}], "mint":{"minter" :$wallet}}\')\n\nwasmd tx wasm instantiate $CODE_ID "$INIT" --from wallet $TXFLAG --label "first cw20"\n')),(0,r.kt)("p",null,"Vous verrez cette sortie indiquant que la transaction d'instanciation est r\xe9ussie :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "height" : "1350700",\n  "txhash" : "82D7240A35BDC6DE307AA725FE52590E83B60D4B682ABB0B0F6DCA28A66212D9",\n  "data" : "0A3C0A0B696E7374616E7469617465122D0A2B7761736D3170657A74676C397661677768346B3574677765366E367475397338686A7779716D6C6D72686B",\n  "raw_log" : "[{\\"events\\" :[{\\"type\\":\\"message\\",\\"attributes\\" :[{\\"key\\":\\"action\\",\\"value\\":\\"instantiate\\"},{\\"key\\":\\"module\\",\\"value\\" :\\"wasm\\"},{\\"key\\":\\"signer\\",\\"value\\":\\"wasm10qhh60sexwtzd6nqr4r34z6t2d7nfrqp684twu\\"},{\\"key\\":\\"code_id\\",\\"value\\" :\\"135\\"},{\\"key\\":\\"contract_address\\",\\"value\\":\\"wasm1peztgl9vagwh4k5tgwe6n6tu9s8hjwyqmlmrhk\\"}]},{\\"type\\":\\"wasm\\",\\"attributes\\" :[{\\"key\\":\\"contract_address\\",\\"value\\":\\"wasm1peztgl9vagwh4k5tgwe6n6tu9s8hjwyqmlmrhk\\"}]}]}]",\n  "logs" : [\n    {\n      "events" : [\n        {\n          "type" : "message",\n          "attributes" : [\n            {\n              "key" : "action",\n              "value" : "instantiate"\n            },\n            {\n              "key" : "module",\n              "value" : "wasm"\n            },\n            {\n              "key" : "signer",\n              "value" : "wasm10qhh60sexwtzd6nqr4r34z6t2d7nfrqp684twu"\n            },\n            {\n              "key" : "code_id",\n              "value" : "135"\n            },\n            {\n              "key" : "contract_address",\n              "value" : "wasm1peztgl9vagwh4k5tgwe6n6tu9s8hjwyqmlmrhk"\n            }\n          ]\n        },\n        {\n          "type" : "wasm",\n          "attributes" : [\n            {\n              "key" : "contract_address",\n              "value" : "wasm1peztgl9vagwh4k5tgwe6n6tu9s8hjwyqmlmrhk"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  "gas_wanted" : "185650",\n  "gas_used" : "155257"\n}\n')),(0,r.kt)("p",null,"Cette commande devrait maintenant afficher l'adresse du contrat instanci\xe9."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"wasmd query wasm list-contract-by-code $CODE_ID $NODE --output json\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "contrats" : [\n    "wasm1peztgl9vagwh4k5tgwe6n6tu9s8hjwyqmlmrhk"\n  ],\n  "pagination" : {}\n}\n')),(0,r.kt)("p",null,"Nous avons maintenant un contrat instanci\xe9 pr\xeat \xe0 \xeatre utilis\xe9. Comme vous pouvez le constater, vous avez besoin de beaucoup de manipulation de JSON shell pour l'interaction de la ligne de commande. C'est juste du sale boulot... Heureusement, nous avons une meilleure option."),(0,r.kt)("h2",{id:"cosmjs"},"CosmJS"),(0,r.kt)("p",null,"CosmJS est le couteau suisse qui permet de faire fonctionner des solutions client bas\xe9es sur JavaScript, qu'il s'agisse d'applications/explorateurs Web, d'extensions de navigateur ou de clients c\xf4t\xe9 serveur comme les robinets/racloirs dans l'\xe9cosyst\xe8me Cosmos."),(0,r.kt)("p",null,"CosmJS contient toutes les fonctions dont vous avez besoin pour interagir avec les clients du SDK Cosmos. Son utilisation va des \xe9changes, des explorateurs de blocs aux scripts de base, y compris l'ex\xe9cution de contrats intelligents."),(0,r.kt)("p",null,"Pour ce tutoriel, nous allons explorer le c\xf4t\xe9 CosmWasm de CosmJS."),(0,r.kt)("h3",{id:"configuration-du-client"},"Configuration du client"),(0,r.kt)("p",null,"La premi\xe8re \xe9tape avant toute chose est de s'assurer que nous pouvons cr\xe9er un compte et nous connecter \xe0 la cha\xeene. Vous utiliserez toujours la commande suivante pour d\xe9marrer le ",(0,r.kt)("inlineCode",{parentName:"p"},"@cosmjs/cli")," avec quelques aides sp\xe9cifiques \xe0 cw20 pr\xe9charg\xe9es (en plus de toutes les aides g\xe9n\xe9rales qu'il poss\xe8de)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npx @cosmjs/cli@^0.26 --init https://raw.githubusercontent.com/CosmWasm/cw-plus/v0.9.0/contracts/cw20-base/helpers.ts\n")),(0,r.kt)("p",null,"Maintenant vous verrez un client REPL."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const [addr, client] = await useOptions(pebblenetOptions).setup('password') ;\nclient.getAccount(addr) ;\n")),(0,r.kt)("p",null,"Cela prendra quelques secondes car nous frappons le robinet la premi\xe8re fois pour nous assurer que vous avez des jetons sur votre compte pour payer les frais de . Quand il revient, vous devriez voir quelque chose comme ceci :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{\n  address : 'wasm1w740h56j9nhudykkm80j5rf6ms25nhe9huuvgp',\n  pubkey : {\n    type : 'tendermint/PubKeySecp256k1',\n    value : 'AkjSrJA0XT612qHvnHieHAebZ cIA2jq3LRj0g4V/lOF'\n  },\n  accountNumber : 323,\n  sequence : 4\n}\n")),(0,r.kt)("h3",{id:"reloading-your-wallet"},"Recharger son portefeuille"),(0,r.kt)("p",null,"Vous pouvez continuer \xe0 taper dans le shell, ou le fermer et ex\xe9cuter certaines sections plus tard. Commencez toujours par :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const [addr, client] = await useOptions(pebblenetOptions).setup(PASSWORD_HERE) ;\n")),(0,r.kt)("p",null,"pour configurer votre client. ",(0,r.kt)("inlineCode",{parentName:"p"},"useOptions")," prend la configuration de pebblenet de tout, des URL aux tokens en passant par bech32prefix. Lorsque vous appelez ",(0,r.kt)("inlineCode",{parentName:"p"},"setup")," avec un mot de passe, il v\xe9rifie ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.pebblenet.key")," et cr\xe9e une nouvelle cl\xe9 si elle n'y est pas, sinon il charge la cl\xe9 depuis le fichier. Votre cl\xe9 priv\xe9e ( en fait mn\xe9monique) est stock\xe9e de mani\xe8re crypt\xe9e, et vous avez besoin du m\xeame mot de passe pour l'utiliser \xe0 nouveau. Essayez ",(0,r.kt)("inlineCode",{parentName:"p"},"cat ~/.pebblenet.key")," pour vous prouver qu'il est effectivement crypt\xe9, ou essayez de recharger avec un mot de passe diff\xe9rent."),(0,r.kt)("p",null,"Si vous voulez le mn\xe9monique, vous pouvez le r\xe9cup\xe9rer \xe0 tout moment, pour autant que vous ayez toujours le fichier et le mot de passe. Vous pourriez l'utiliser plus tard pour r\xe9cup\xe9rer, ou utiliser le m\xeame moyen mn\xe9motechnique pour importer la cl\xe9 dans l'outil ",(0,r.kt)("inlineCode",{parentName:"p"},"pebblenet")," cli."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"useOptions(pebblenetOptions).recoverMnemonic(YOUR_PASSWORD_HERE)\n")),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Cette commande enregistre la cl\xe9 dans ",(0,r.kt)("inlineCode",{parentName:"h5"},"~/.pebblenet.key")," chiffr\xe9e. Si vous oubliez le mot de passe, supprimez-le ou passez \xe0 un nom de fichier `` avec un mot de passe pour cr\xe9er une nouvelle cl\xe9. :::")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Essayez aussi avec un mot de passe invalide et voyez comment cela se passe."),(0,r.kt)("p",{parentName:"div"},"Maintenant que vous vous sentez un peu plus s\xfbr de vos cl\xe9s (et de votre capacit\xe9 \xe0 les charger plus tard), commen\xe7ons \xe0 travailler avec certains contrats ."),(0,r.kt)("h3",{parentName:"div",id:"example-star"},"Exemple : STAR"),(0,r.kt)("p",{parentName:"div"},"Le premier contrat que j'ai t\xe9l\xe9charg\xe9 \xe9tait des jetons STAR, ou \"\xc9toiles d'or\", \xe0 distribuer aux 3 premiers validateurs de ",(0,r.kt)("a",{parentName:"p",href:"https://block-explorer.pebblenet.cosmwasm.com/validators"})," sur le r\xe9seau."),(0,r.kt)("p",{parentName:"div"},"Ne copiez pas ce texte mot pour mot, mais regardez comment un tel contrat est mis en place et d\xe9ploy\xe9 la premi\xe8re fois."),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const [addr, client] = await useOptions(pebblenetOptions).setup(PASSWORD_HERE) ;\n\nconst cw20 = CW20(client, pebblenetOptions.fees) ;\nconst codeId = await cw20.upload(addr) ;\nconsole.log(`CodeId : ${codeId}`) ;\n// output : 55\n\n// activer le mode \xe9diteur REPL pour \xe9diter le code multiligne puis ex\xe9cuter\n.editor\nconst initMsg = {\n  name : "Golden Stars",\n  symbol : "STAR",\n  decimals : 2,\n  // liste de toutes les adresses des auto-d\xe9l\xe9gu\xe9s du validateur - 100 STARs chacune !\n  initial_balances : [\n    {adresse : "wasm13krn38qhu83y5xvmjgydnk5vjau2u3c0tv5jsu", montant : "10000"},\n    {adresse : "wasm1ppgpwep3yzh8w3d89xlzlens3420j5vs5q3p4j", amount: "10000"},\n    {adresse : "wasm1fnx5jzqsdkntlq2nspjgswtezf45u5ug3kq9sw", montant : "10000"},\n  ],\n  menthe : {\n    minter: addr,\n  },\n} ;\n// quitter l\'\xe9diteur en utilisant `^D` et ex\xe9cuter le code saisi\n^\nD\n\nconst contract = await cw20.instantiate(addr, codeId, initMsg, "STAR") ;\nconsole.log(`Contrat : ${contract.contractAddress}`) ;\n// Contrat : wasm14wm5jvsm6r896tcqsx9dlxc8h0w2mg5de39dsm\n\nconsole.log(await contract.balance("wasm13krn38qhu83y5xvmjgydnk5vjau2u3c0tv5jsu")) ;\n// 10000\nconsole.log(await contract.balance(contract.contractAddress)) ;\n// 0\n')),(0,r.kt)("h3",{parentName:"div",id:"spin-nouveau-contrat"},"Spin Nouveau Contrat"),(0,r.kt)("p",{parentName:"div"},"Maintenant que nous l'avons t\xe9l\xe9charg\xe9, nous pouvons facilement \xe9tablir un second contrat. Cette fois-ci, veuillez v\xe9rifier et personnaliser les noms des champs et les montants des jetons avant de les saisir."),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const [addr, client] = await useOptions(pebblenetOptions).setup(PASSWORD_HERE) ;\nconst cw20 = CW20(client, pebblenetOptions.fees) ;\n\n.editor\nconst initMsg = {\n  name : "My Coin",\n  symbol : "MINE",\n  d\xe9cimales : 6,\n  soldes_initiaux : [\n    {adresse : addr, montant : "12345678000"},\n  ],\n  mint : {\n    monnayeur : addr,\n    cap : "99900000000"\n  },\n} ;\n^\nD\n\nconst codeId = 55 ;\nconst mine = await cw20.instantiate(addr, codeId, initMsg, "MINE") ;\nconsole.log(`Contrat : ${mine.contractAddress}`) ;\n// Contrat : wasm10ajume5hphs9gcrpl9mw2m96fv7qu0q7esznj2\n\n// maintenant, v\xe9rifiez la configuration\nmine.balance(addr) ;\nmine.tokenInfo()\nmine.minter()\n')),(0,r.kt)("p",{parentName:"div"},"Regarde, tu es riche maintenant ! Il est temps de partager la richesse."),(0,r.kt)("h3",{parentName:"div",id:"using-contract"},"Utilisation de contrat"),(0,r.kt)("p",{parentName:"div"},"Dans cette section, nous allons vous montrer comment utiliser votre jeton nouvellement construit. Vous pouvez continuer \xe0 taper dans le m\xeame REPL00 que vous avez utilis\xe9 pour cr\xe9er les jetons ",(0,r.kt)("inlineCode",{parentName:"p"},"MINE")," (ou tout autre nom plus appropri\xe9 que vous avez invent\xe9), mais si vous l'avez ferm\xe9 et que vous revenez, voici comment vous reconnecter :"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const [addr, client] = await useOptions(pebblenetOptions).setup(PASSWORD_HERE) ;\nconst cw20 = CW20(client, pebblenetOptions.fees) ;\n\n// si vous avez oubli\xe9 votre adresse, mais que vous vous souvenez de votre \xe9tiquette, vous pouvez la retrouver\nconst contracts = await client.getContracts(55)\ncontracts\nconst contractAddress = contracts.filter(x => x.label === 'MINE')[0].address ;\n\n// sinon, vous pouvez simplement faire un copier-coller de ce qui pr\xe9c\xe8de\nconst contractAddress = \"wasm14wm5jvsm6r896tcqsx9dlxc8h0w2mg5de39dsm\"\n\n// maintenant, connectez-vous \xe0 ce contrat et assurez-vous que c'est le v\xf4tre\nconst mine = cw20.use(contractAddress) ;\nmine.tokenInfo()\nmine.minter()\nmine.balance(addr)\n")),(0,r.kt)("p",{parentName:"div"},"Ok, vous \xeates connect\xe9 \xe0 votre contrat. Voyons voir de quoi est capable CW20. Ici, je vais vous montrer comment vous pouvez frapper des jetons (vous vous \xeates donn\xe9 cette permission sp\xe9ciale lors de l'init, n'est-ce pas ?) et transf\xe9rer des jetons \xe0 d'autres utilisateurs."),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const someone = "wasm13nt9rxj7v2ly096hm8qsyfjzg5pr7vn56p3cay" ;\nconst other = "wasm1ve2n9dd4uy48hzjgx8wamkc7dp7sfdv82u585d" ;\n\n// pour l\'instant, vous seul avez des jetons\nmine.balance(addr)\nmine.balance(someone)\nmine.balance(other)\n// et regardez le total\nmine.tokenInfo()\n\n// frappons quelques jetons pour quelqu\'un\nmine.mint(addr, someone, "999888000")\n// Bonus, prenez le hash tx imprim\xe9 et copiez-collez-le dans https://bigdipper.wasmnet.cosmwasm.com\n// ex 26D5514CF437EE584793768B56CB4E605F1F6E61FC01230DC64E08E2EE97FA\n\n// Voir les soldes mis \xe0 jour\nmine.balance(someone)\nmine.balance(addr)\n// et l\'offre augmente\nmine.tokenInfo()\n\n// Ok, maintenant transf\xe9rons quelques jetons... c\'est le plus normal, non ?\nmine.transfer(addr, other, "4567000") ;\n// ex. 4A76EFFEB09C82D0FEB97C3B5A9D5BADB6E9BD71F4EF248A3EF8B232C2F7262A\nmine.balance(other)\nmine.balance(addr)\n')))))}p.isMDXComponent=!0}}]);